{
  "swagger": "2.0",
  "info": {
    "title": "SAF API DEFINITIONS",
    "version": "1.0.0",
    "description":
    "This is a REST API application made with For SAF. It retrieves data from SAF Organization.",
    "contact": {
      "name": "SAF",
      "url": "https://saf.org"
    }
  },
  "schemes": [
    "http"
  ],
  "host": "34.220.39.187:4400",
  "basePath": "/api/v1",
  "paths": {
    "/programs": {
      "get": {
        "summary": "Get all the Programs",
        "description": "Get all active Programs to the UI.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "category",
            "description": "Category of the programs to retrieve.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/definitions/pageParam"
          },
          {
            "$ref": "#/definitions/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/programsResponse"
                  }
                },
                "pagination": {
                  "type": "object",
                  "$ref": "#/definitions/paginationDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/program/{slug}": {
      "get": {
        "summary": "Get A Program",
        "description": "Get One Active Program using program slug.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Unique slug for each program"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/definitions/programsResponse"
                }
              }
            }
          },
          "404": {
            "description": "Program Not Found",
            "schema": {
              "$ref": "#/definitions/notFoundResponse"
            }
          }
        }
      }
    },
    "/news": {
      "get": {
        "summary": "Get all News",
        "description": "Get all active News to the UI.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "in": "query",
            "name": "tags",
            "description": "tag of the programs to retrieve.",
            "required": false,
            "type": "string"
          },
          {
            "$ref": "#/definitions/pageParam"
          },
          {
            "$ref": "#/definitions/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/newsResponse"
                  }
                },
                "pagination": {
                  "type": "object",
                  "$ref": "#/definitions/paginationDefinition"
                }
              }

            }
          }
        }
      }
    },
    "/news/{slug}": {
      "get": {
        "summary": "Get A News",
        "description": "Get One Active News using program slug.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Unique slug for each News"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/definitions/newsResponse"
                }
              }
            }
          },
          "404": {
            "description": "News Not Found",
            "schema": {
              "$ref": "#/definitions/notFoundResponse"
            }
          }
        }
      }
    },
    "/webinars": {
      "get": {
        "summary": "Get all the Webinars",
        "description": "Get all active Webinars to the UI.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/definitions/pageParam"
          },
          {
            "$ref": "#/definitions/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/webinarResponse"
                  }
                },
                "pagination": {
                  "type": "object",
                  "$ref": "#/definitions/paginationDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/webinar/{slug}": {
      "get": {
        "summary": "Get A Webinar",
        "description": "Get One Active Webinar using Webinar slug.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Unique slug for each Webinar"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/definitions/webinarResponse"
                }
              }
            }
          },
          "404": {
            "description": "News Not Found",
            "schema": {
              "$ref": "#/definitions/notFoundResponse"
            }
          }
        }
      }
    },
    "/events": {
      "get": {
        "summary": "Get all the Events",
        "description": "Get all active Events to the UI.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "$ref": "#/definitions/pageParam"
          },
          {
            "$ref": "#/definitions/limitParam"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "example": 200
                },
                "message": {
                  "type": "string"
                },
                "data": {
                  "type": "array",
                  "items": {
                    "$ref": "#/definitions/eventResponse"
                  }
                },
                "pagination": {
                  "type": "object",
                  "$ref": "#/definitions/paginationDefinition"
                }
              }
            }
          }
        }
      }
    },
    "/event/{slug}": {
      "get": {
        "summary": "Get An Event",
        "description": "Get One Active Event using Event slug.",
        "produces": [
          "application/json"
        ],
        "parameters": [
          {
            "name": "slug",
            "in": "path",
            "type": "string",
            "required": true,
            "description": "Unique slug for each Event"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/definitions/eventResponse"
                }
              }
            }
          },
          "404": {
            "description": "News Not Found",
            "schema": {
              "$ref": "#/definitions/notFoundResponse"
            }
          }
        }
      }
    },
    "/team/{category}": {
      "get": {
        "summary": "Get All Members of SAF Team.",
        "description": "Get all the members of SAF team according to the category defined.",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "category",
            "in": "path",
            "type": "string",
            "enum": ["management", "committees", "honor", "team"],
            "required": true,
            "description": "Category by which team members will be fetched"
          },
          {
            "name": "sort",
            "in": "query",
            "description": "How to sort members according to order predefined by SAF.",
            "enum": ["asc", "desc", "ascending", "descending", 1, -1],
            "default": "asc"
          }
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/definitions/teamResponse"
                }
              }
            }
          },
          "404": {
            "description": "News Not Found",
            "schema": {
              "$ref": "#/definitions/notFoundResponse"
            }
          }
        }
      }
    },
    "/branches": {
      "get": {
        "summary": "Get all the Branches",
        "description": "Get all active Branches to the UI.",
        "produces": [
          "application/json"
        ],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/definitions/branchResponse"
                }
              }
            }
          }
        }
      }
    },
    "/videos": {
      "get": {
        "summary": "Get All Videos",
        "description": "Get All Videos can be viewed in videos page",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/definitions/videosResponse"
                }
              }
            }
          }
        }
      }
    },
    "/videos/featured": {
      "get": {
        "summary": "Get featured Videos only",
        "description": "Get featured Videos can be viewed in home page",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "$ref": "#/definitions/videosResponse"
                }
              }
            }
          }
        }
      }
    },
    "/versions": {
      "get": {
        "summary": "Get All versions published by SAF",
        "description": "This endpoint returns The versions SAF publish and have publications inside",
        "produces": ["application/json"],
        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "object",
                      "properties": {
                        "ar": {
                          "type": "string"
                        },
                        "en": {
                          "type": "string"
                        }
                      }
                    },
                    "image": {
                      "type": "string"
                    },
                    "slug": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "default": "active"
                    },
                    "order": {
                      "type": "number"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/versions/{slug}": {
      "get": {
        "summary": "Get All Publications of SAF",
        "description": "Get All the publications inside single version",
        "produces": ["application/json"],
        "parameters": [
          {
            "$ref": "#/definitions/pageParam"
          },
          {
            "$ref": "#/definitions/limitParam"
          },
          {
            "name": "slug",
            "in": "path",
          "type": "string",
          "description": "Provide Slug you get from '/versions' endpoint or use 'docs' to get documents of SAF",
          "required": true
          }
        ],

        "responses": {
          "200": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "message": {
                  "type": "string"
                },
                "status": {
                  "type": "number",
                  "example": 200
                },
                "data": {
                  "type": "object",
                  "properties": {
                    "title": {
                      "type": "object",
                      "properties": {
                        "ar": {
                          "type": "string"
                        },
                        "en": {
                          "type": "string"
                        }
                      }
                    },
                    "image": {
                      "type": "string"
                    },
                    "parent": {
                      "type": "string"
                    },
                    "file": {
                      "type": "string"
                    },
                    "status": {
                      "type": "string",
                      "default": "active"
                    }
                  }
                }
              }
            }
          }
        }
      }
    },
    "/contact": {
      "post": {
        "summary": "Send Contact Form Data",
        "description": "This endpoint accepts Post request from Contact form",
        "produces": ["application/json"],
        "parameters": [
          {
            "name": "name",
            "in": "body",
            "type": "string",
            "required": true
          },
          {
            "name": "email",
            "in": "body",
            "type": "string",
            "required": true
          },
          {
            "name": "phone",
            "in": "body",
            "type": "string",
            "required": false
          },
          {
            "name": "subject",
            "in": "body",
            "type": "string",
            "required": true
          },
          {
            "name": "message",
            "in": "body",
            "type": "string",
            "required": true
          }
        ],
        "responses": {
          "201": {
            "description": "successful operation",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "default": 201
                },
                "message": {
                  "type": "string"
                }
              }
            }
          },
          "422": {
            "description": "Validation Errors",
            "schema": {
              "type": "object",
              "properties": {
                "status": {
                  "type": "number",
                  "default": 422
                },
                "message": {
                  "type": "string"
                },
                "errors": {
                  "type": "array",
                  "items": {
                    "type": "object",
                    "properties": {
                      "location": {
                        "type": "string",
                        "example": "body"
                      },
                      "msg": {
                        "type": "string",
                        "example": "Not valid input."
                      },
                      "param": {
                        "type": "string",
                        "example": "email"
                      },
                      "value": {
                        "type": "string"
                      }
                    }
                  }
                }
              }
            }
          }
        }
      }
    }
  },
  "definitions": {
    "successResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 200
        },
        "message": {
          "type": "string"
        }
      }
    },
    "programsResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "title": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "description": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "shortDescription": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "slug": {
          "type": "string"
        },
        "hasSms":  {
          "type": "boolean"
        },
        "toSms": {
          "type": "string"
        },
        "status": {
          "type": "string"
          },
        "amountNeeded": {
          "type": "number"
        },
        "amountReceived": {
          "type": "number"
        },
        "hasShares": {
          "type": "boolean"
        },
        "sharesValue": {
          "type": "number"
        },
        "completed": {
          "type": "boolean"
        },
        "isProgram": {
          "type": "boolean"
        },
        "sponsor": {
          "type": "object"
        },
        "image": {
          "type": "string"
        },
        "category": {
          "type": "string"
        },
        "order": {
          "type": "number"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "newsResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "title": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "description": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "shortDescription": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "slug": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "tags": {
          "type": "array"
        },
        "status": {
          "type": "string"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "webinarResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "title": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "description": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "slug": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": "active"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "teamResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name":  {
          "type": "object",
          "properties": {
            "ar":  {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "position": {
          "type": "object",
          "properties": {
            "ar":  {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "image": {
          "type": "string"
        },
        "category": {
          "type": "string",
          "enum": ["management", "committees", "honor", "team"]
        },
        "committee": {
          "type": "string",
          "enum": ["social", "scientific", "financial", "media", "audit", "governance"]
        },
        "sector": {
          "type": "string",
          "enum": ["general",
            "financial",
            "services",
            "riyadh",
            "dammam",
            "kharj",
            "dawadmi",
            "abha"]
        },
        "status":  {
          "type": "string"
        },
        "order": {
          "type": "number"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "branchResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "name": {
          "type": "object",
          "properties": {
            "ar": {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "address": {
          "type": "object",
          "properties": {
            "ar": {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "location": {
          "type": "object",
          "properties": {
            "lat": {
              "type": "string"
            },
            "lng": {
              "type": "string"
            }
          }
        },
        "email": {
          "type": "string"
        },
        "phone": {
          "type": "number"
        },
        "bank": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": "active"
        },
        "image": {
          "type": "string"
        },
        "order": {
          "type": "number"
        }
      }
    },
    "eventResponse": {
      "type": "object",
      "properties": {
        "_id": {
          "type": "string"
        },
        "title": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "description": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "shortDescription": {
          "type": "object",
          "properties": {
            "ar" : {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "slug": {
          "type": "string"
        },
        "image": {
          "type": "string"
        },
        "date": {
          "type": "string"
        },
        "time": {
          "type": "string"
        },
        "location": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": "active"
        },
        "createdAt": {
          "type": "string"
        }
      }
    },
    "videosResponse": {
      "type": "object",
      "properties": {
        "title": {
          "type": "object",
          "properties": {
            "ar": {
              "type": "string"
            },
            "en": {
              "type": "string"
            }
          }
        },
        "image": {
          "type": "string"
        },
        "url": {
          "type": "string"
        },
        "featured": {
          "type": "boolean"
        },
        "createdAt": {
          "type": "string"
        },
        "status": {
          "type": "string",
          "default": "active"
        },
        "order": {
          "type": "number"
        }
      }
    },
    "InvalidResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 501
        },
        "message": {
          "type": "string"
        }
      }
    },
    "notFoundResponse": {
      "type": "object",
      "properties": {
        "status": {
          "type": "number",
          "example": 404
        },
        "message": {
          "type": "string"
        }
      }
    },
    "limitParam": {
      "in": "query",
      "name": "limit",
      "description": "limit of the data to retrieve.",
      "required": false,
      "default": 10,
      "type": "number"
    },
    "pageParam": {
      "in": "query",
      "name": "page",
      "description": "number of the page to retrieve data from.",
      "required": false,
      "default": 1,
      "type": "number"
    },
    "paginationDefinition": {
      "type": "object",
      "properties": {
          "currentPage": {
            "type": "number",
            "example": 1
          },
          "pages": {
            "type": "number",
            "example": 10
          },
          "hasNext": {
            "type": "boolean",
            "example": true
          },
          "nextPage": {
            "type": "number",
            "example": 2
          },
          "hasPrevious": {
            "type": "boolean",
            "example": false
          },
          "previousPage": {
            "type": "number",
            "example": 2
          }
      }
    }
  }
}